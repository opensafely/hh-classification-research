------------------------------------------------
      name:  <unnamed>
       log:  /Users/lsh152058/Desktop/GitHub/hh-
> classification-research/logs/10_eth_imd_descri
> ptives_W1.log
  log type:  text
 opened on:  27 Jul 2021, 11:29:12

. 
. 
.  /* PROGRAMS TO AUTOMATE TABULATIONS==========
> =================================*/ 
. 
. **********************************************
> **********************************
. * All below code from K Baskharan 
. * Generic code to output one row of table for 
> ethnicity
. 
. 
. **ETH5
. cap prog drop generaterow_eth

. program define generaterow_eth
  1. syntax, variable(varname) condition(string)
>  
  2.         
.         cou
  3.         local overalldenom=r(N)
  4.         
.         sum `variable' if `variable' `conditio
> n'
  5.         local level=substr("`condition'",3,
> .)
  6.         local lab: label `variable'Label `l
> evel'
  7.         file write tablecontent (" `lab'") 
> _tab
  8.         
.         *local lab: label hhRiskCatBROADLabel 
> 4
. 
.         
.         /*this is the overall column*/
.         cou if `variable' `condition'
  9.         local rowdenom = r(N)
 10.         local colpct = 100*(r(N)/`overallde
> nom')
 11.         file write tablecontent %9.0f (`row
> denom') _tab   %3.1f (`colpct')  _tab
 12. 
.         /*this loops through groups*/
.         forvalues i=1/5{
 13.         cou if eth5 == `i'
 14.         local rowdenom = r(N)
 15.         cou if eth5 == `i' & `variable' `co
> ndition'
 16.         local pct = 100*(r(N)/`rowdenom') 
 17.         file write tablecontent %9.0f (r(N)
> ) _tab  %3.1f (`pct')  _tab
 18.         }
 19.         
.         file write tablecontent _n
 20. end

. 
. **ETH16 - SOUTH ASIANS ONLY
. cap prog drop generaterow_eth16

. program define generaterow_eth16
  1. syntax, variable(varname) condition(string)
>  
  2.         
.         cou
  3.         local overalldenom=r(N)
  4.         
.         sum `variable' if `variable' `conditio
> n'
  5.         local level=substr("`condition'",3,
> .)
  6.         local lab: label `variable'Label `l
> evel'
  7.         file write tablecontent (" `lab'") 
> _tab
  8. 
.         
.         /*this is the overall column*/
.         cou if `variable' `condition'
  9.         local rowdenom = r(N)
 10.         local colpct = 100*(r(N)/`overallde
> nom')
 11.         file write tablecontent %9.0f (`row
> denom') _tab   %3.1f (`colpct')  _tab
 12. 
.         /*this loops through groups indian, pa
> kistani, bangladeshi*/
.         forvalues i=4/6{
 13.         cou if eth16 == `i'
 14.         local rowdenom = r(N)
 15.         cou if eth16 == `i' & `variable' `c
> ondition'
 16.         local pct = 100*(r(N)/`rowdenom') 
 17.         file write tablecontent %9.0f (r(N)
> ) _tab  %3.1f (`pct')  _tab
 18.         }
 19.         
.         file write tablecontent _n
 20. end

. 
. *ETH IMD
. * Generic code to output one row of table for 
> ethnicity-imd combined variable
. 
. cap prog drop generaterow_ethimd

. program define generaterow_ethimd
  1. syntax, variable(varname) condition(string)
>  
  2.         
.         cou
  3.         local overalldenom=r(N)
  4.         
.         sum `variable' if `variable' `conditio
> n'
  5.         **K Wing additional code to aoutput
>  variable category labels**
.         local level=substr("`condition'",3,.)
  6.         local lab: label `variable'Label `l
> evel'
  7.         file write tablecontent (" `lab'") 
> _tab
  8.         
.         *local lab: label hhRiskCatBROADLabel 
> 4
. 
.         
.         /*this is the overall column*/
.         cou if `variable' `condition'
  9.         local rowdenom = r(N)
 10.         local colpct = 100*(r(N)/`overallde
> nom')
 11.         file write tablecontent %9.0f (`row
> denom') _tab   %3.1f (`colpct')  _tab
 12. 
.         /*this loops through groups*/
.         forvalues i=1/4{
 13.         cou if eth_imd == `i'
 14.         local rowdenom = r(N)
 15.         cou if eth_imd == `i' & `variable' 
> `condition'
 16.         local pct = 100*(r(N)/`rowdenom') 
 17.         *file write tablecontent %9.0gc (r(
> N))  %3.1f (`pct')  _tab
.         file write tablecontent %9.0f (r(N)) _
> tab  %3.1f (`pct')  _tab
 18.         }
 19.         
.         file write tablecontent _n
 20. end

. 
. *ETH16 IMD
. * Generic code to output one row of table for 
> ethnicity-imd combined variable
. 
. cap prog drop generaterow_eth16imd

. program define generaterow_eth16imd
  1. syntax, variable(varname) condition(string)
>  
  2.         
.         cou
  3.         local overalldenom=r(N)
  4.         
.         sum `variable' if `variable' `conditio
> n'
  5.         **K Wing additional code to aoutput
>  variable category labels**
.         local level=substr("`condition'",3,.)
  6.         local lab: label `variable'Label `l
> evel'
  7.         file write tablecontent (" `lab'") 
> _tab
  8.         
.         *local lab: label hhRiskCatBROADLabel 
> 4
. 
.         
.         /*this is the overall column*/
.         cou if `variable' `condition'
  9.         local rowdenom = r(N)
 10.         local colpct = 100*(r(N)/`overallde
> nom')
 11.         file write tablecontent %9.0f (`row
> denom') _tab   %3.1f (`colpct')  _tab
 12. 
.         /*this loops through groups*/
.         forvalues i=1/6{
 13.         cou if eth16_imd == `i'
 14.         local rowdenom = r(N)
 15.         cou if eth16_imd == `i' & `variable
> ' `condition'
 16.         local pct = 100*(r(N)/`rowdenom') 
 17.         file write tablecontent %9.0f (r(N)
> ) _tab  %3.1f (`pct')  _tab
 18.         }
 19.         
.         file write tablecontent _n
 20. end

. 
. 
. **********************************************
> **********************************
. * Generic code to output one section (varible)
>  within table (calls above)
. *ETH5
. cap prog drop tabulatevariable_eth

. prog define tabulatevariable_eth
  1. syntax, variable(varname) min(real) max(rea
> l) [missing]
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _
> n 
  4. 
.         forvalues varlevel = `min'/`max'{ 
  5.                 generaterow_eth, variable(`
> variable') condition("==`varlevel'")
  6.         }
  7.         
.         if "`missing'"!="" generaterow_eth, va
> riable(`variable') condition("== 12")
  8.         
. end

. 
. 
. *ETH16
. cap prog drop tabulatevariable_eth16

. prog define tabulatevariable_eth16
  1. syntax, variable(varname) min(real) max(rea
> l) [missing]
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _
> n 
  4. 
.         forvalues varlevel = `min'/`max'{ 
  5.                 generaterow_eth16, variable
> (`variable') condition("==`varlevel'")
  6.         }
  7.         
.         if "`missing'"!="" generaterow_eth16, 
> variable(`variable') condition("== 12")
  8.         
. end

. 
. *ETH IMD
. cap prog drop tabulatevariable_ethimd

. prog define tabulatevariable_ethimd
  1. syntax, variable(varname) min(real) max(rea
> l) [missing]
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _
> n 
  4. 
.         forvalues varlevel = `min'/`max'{ 
  5.                 generaterow_ethimd, variabl
> e(`variable') condition("==`varlevel'")
  6.         }
  7.         
.         if "`missing'"!="" generaterow_ethimd,
>  variable(`variable') condition("== 12")
  8.         
. end

. 
. *ETH16 IMD
. cap prog drop tabulatevariable_eth16imd

. prog define tabulatevariable_eth16imd
  1. syntax, variable(varname) min(real) max(rea
> l) [missing]
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _
> n 
  4. 
.         forvalues varlevel = `min'/`max'{ 
  5.                 generaterow_eth16imd, varia
> ble(`variable') condition("==`varlevel'")
  6.         }
  7.         
.         if "`missing'"!="" generaterow_eth16im
> d, variable(`variable') condition("== 12")
  8.         
. end

. 
. 
. /* INVOKE PROGRAMS FOR TABLE 1================
> ================================*/ 
. 
. * Open Stata dataset
. use ./output/hhClassif_analysis_dataset_ageban
> d_3MAIN.dta, clear //age 67+ only

. 
. keep patient_id hhRiskCat hh_size* hhRiskCatBR
> OAD ethnicity ethnicity_16 hh_size eth5 imd et
> h16

. 
. *generate new household category which include
> s living alone
. gen hh_rohini=hhRiskCatBROAD

. replace hh_rohini=0 if hh_size==1 & hhRiskCatB
> ROAD==1 //67+ living alone
(2 real changes made)

. label define hh_rohini 0"Living alone (67+ onl
> y)" 1"1 gen (67+ only)" 2"2 gens" 3"3+ gens"

. label values hh_rohini hh_rohini

. tab hh_rohini

              hh_rohini |      Freq.     Percent
>         Cum.
------------------------+-----------------------
> ------------
Living alone (67+ only) |          2        0.01
>         0.01
       1 gen (67+ only) |         20        0.13
>         0.14
                 2 gens |         45        0.28
>         0.42
                3+ gens |     15,816       99.58
>       100.00
------------------------+-----------------------
> ------------
                  Total |     15,883      100.00

. 
. label var hh_rohini "Number of generations in 
> each household"

. 
. *add household size =1 to household size varia
> ble
. tab hh_size5cat

hh_size5cat |      Freq.     Percent        Cum.
------------+-----------------------------------
        2-3 |     10,758       80.71       80.71
        4-5 |      2,544       19.09       99.80
        6-7 |         27        0.20      100.00
------------+-----------------------------------
      Total |     13,329      100.00

. replace hh_size5cat=0 if hh_size==1
(2,202 real changes made)

. label define  hh_size5catLabel  0 "1", modify

. tab hh_size5cat

hh_size5cat |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      2,202       14.18       14.18
        2-3 |     10,758       69.27       83.45
        4-5 |      2,544       16.38       99.83
        6-7 |         27        0.17      100.00
------------+-----------------------------------
      Total |     15,531      100.00

. 
. label var hh_size5cat "Number of people in eac
> h household"

. 
. *Set up output file
. cap file close tablecontent

. file open tablecontent using ./output/table_et
> hnicity_descriptivesMAIN.txt, write text repla
> ce

. 
. file write tablecontent ("Table x: Household s
> ize by ethnic group") _n

. 
. * HOUSEHOLD SIZE BY ETHNICITY IN 5 CATEGORIES
. 
. local lab1: label eth5Label 1

. local lab2: label eth5Label 2

. local lab3: label eth5Label 3

. local lab4: label eth5Label 4

. local lab5: label eth5Label 5

. stop
command stop is unrecognized
r(199);

end of do-file

r(199);

. d hh_rohini

              storage   display    value
variable name   type    format     label      va
> riable label
------------------------------------------------
hh_rohini       float   %23.0g     hh_rohini
                                              Nu
                            > mber of
                            generations in each
                            household

. tab hh_rohini

  Number of generations |
      in each household |      Freq.     Percent        Cum.
------------------------+-----------------------------------
Living alone (67+ only) |          2        0.01        0.01
       1 gen (67+ only) |         20        0.13        0.14
                 2 gens |         45        0.28        0.42
                3+ gens |     15,816       99.58      100.00
------------------------+-----------------------------------
                  Total |     15,883      100.00

. tab imd

        Index of |
        Multiple |
     Deprivation |
           (IMD) |      Freq.     Percent        Cum.
-----------------+-----------------------------------
1 least deprived |     11,091       69.83       69.83
               4 |      3,200       20.15       89.98
 5 most deprived |      1,592       10.02      100.00
-----------------+-----------------------------------
           Total |     15,883      100.00

